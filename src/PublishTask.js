const Twit = require('twit')
const { crypto } = require('./utils')
const LFM = require('lastfm-node-client')
const fetch = require('node-fetch')

module.exports = async ({ user, schedule }) => {
  const { themeOptions: options, theme } = schedule
  // TODO: Finish this
  try {
    let { accessToken, accessSecret } = user.twitter
    let { sessionKey } = user.lastfm
    accessToken = crypto.decryptToken(accessToken, process.env.TWITTER_CRYPTO)
    accessSecret = crypto.decryptToken(accessSecret, process.env.TWITTER_CRYPTO)
    sessionKey = crypto.decryptToken(sessionKey, process.env.LASTFM_CRYPTO)

    const Twitter = new Twit({
      access_token: accessToken,
      access_token_secret: accessSecret,
      consumer_key: process.env.TWITTER_API_KEY,
      consumer_secret: process.env.TWITTER_API_SECRET
    })

    const lfm = new LFM(process.env.LASTFM_KEY, process.env.LASTFM_SECRET, sessionKey)
    const lfmUser = await lfm.userGetInfo()

    console.log(lfmUser.user.name)

    options.user = lfmUser.user.name

    const body = { theme, options }

    fetch(`${process.env.GENERATOR_URL}/generate`, { method: 'POST', body: JSON.stringify(body), headers: { 'Content-Type': 'application/json' } })
      .then(res => res.buffer())
      .then(buffer => {
        const base64 = buffer.toString('base64')
        Twitter.post('media/upload', { media_data: base64 }, (err, data) => {
          if (err) {
            console.error(err)
            return
          }
          const mediaIdStr = data.media_id_string
          const altText = 'My top image generated by @musicorumapp'
          const metaParams = { media_id: mediaIdStr, alt_text: { text: altText } }

          Twitter.post('media/metadata/create', metaParams, (err, data) => {
            if (!err) {
              // now we can reference the media and post a tweet (media will attach to the tweet)
              var params = { media_ids: [mediaIdStr] }

              console.log(params)

              Twitter.post('statuses/update', params, (err, data, response) => {
                if (err) console.error(err)
                console.log(data)
              })
            } else {
              console.error(err)
            }
          })
        })
      })
  } catch (e) {
    console.error(e)
  }
}
